@model WebShoeShop.Models.OrderViewModel
@{
    if (ViewBag.User != null)
    {
        /* var user = (WebShoeShop.Models.ApplicationUser)ViewBag.User;*/
    }
}
@using (Ajax.BeginForm("CheckOut", "Shoppingcart", new AjaxOptions
{
    HttpMethod = "POST",
    UpdateTargetId = "load_data",
    OnSuccess = "OnSuccessCO",
    OnFailure = "OnFailure",
    OnBegin = "OnBeginCO"
}, new { @Id = "myForm" }))
{
    <script>
        function OnBeginCO() {
            $('#btnCheckOut').attr("disabled", "disabled");
            $('#load_send').html('<div class="spinner"><i class="fa fa-spinner fa-spin"></i></div><p>Đang xử lí...</p>');
        }
        function OnSuccessCO(res) {
            if (res.Success) {
                if (res.Code == 1) {
                    location.href = "/ShoppingCart/CheckOutSuccess";
                }
                else {
                    location.href = res.Url;
                }
            }
        }
        //function OnFailure() {

        //}
    </script>
    @Html.AntiForgeryToken()
    <h3>Thông tin giao hàng</h3>
    if (!Request.IsAuthenticated)
    {
        <div class="form-group">
            <label>Họ tên khách hàng</label>
            <input type="text" name="CustomerName" required class="form-control" autocomplete="off" />
        </div>
        <div class="form-group">
            <label>Số điện thoại</label>
            <input type="text" name="Phone" class="form-control" autocomplete="off" />
        </div>
        <div class="form-group">
            <label>Địa chỉ</label>
            <input type="text" name="Address" required class="form-control" autocomplete="off" />
        </div>
        <div class="form-group">
            <label>Email</label>
            <input type="text" name="Email" class="form-control" autocomplete="off" />
        </div>
    }
    else
    {
        var user = (WebShoeShop.Models.ApplicationUser)ViewBag.User;
        <div class="form-group">
            <label>Họ tên khách hàng</label>
            <input type="text" name="CustomerName" value="@user.FullName" required class="form-control" autocomplete="off" />
        </div>
        <div class="form-group">
            <label>Số điện thoại</label>
            <input type="text" name="Phone" value="@user.Phone" class="form-control" autocomplete="off" />
        </div>
        <div class="form-group">
            <label for="provinceSelect">Chọn thành phố:</label>
            <select id="provinceSelect" class="form-control">
                <option value="">-- Chọn thành phố --</option>
            </select>
        </div>
        <div class="form-group">
            <label for="districtSelect">Quận/Huyện:</label>
            <select id="districtSelect" class="form-control">
                <option value="">-- Chọn quận/huyện --</option>
            </select>
        </div>
        <div class="form-group">
            <label>Địa chỉ cụ thể</label>
            <input type="text" id="addressDetail" name="AddressDetail" required class="form-control" autocomplete="off" />
        </div>

        <div class="form-group">
            <label>Email</label>
            <input type="text" name="Email" value="@user.Email" class="form-control" autocomplete="off" />
        </div>
    }
    <div class="form-group">
        <label>Phương thức vận chuyển</label>
        <select class="form-control" name="TypeShip">
            <option value="1" selected>Nhanh (phí giao hàng: miễn phí)</option>
            <option value="2">Hỏa tốc (phí giao hàng: 70000đ)</option>
        </select>
    </div>
    <div class="form-group">
        <label>Hình thức thanh toán</label>
        <select class="form-control" name="TypePayment" id="drTypePayment">
            <option value="1" selected>COD</option>
            <option value="2">Chuyển khoản</option>
        </select>
    </div>

    <div class="form-group" id="load_form_payment" style="display:none;">
        <h4><label>Chọn phương thức thanh toán:</label><br /></h4>
        <h5>Cách 1: Chuyển hướng sang VNPAY chọn phương thức thanh toán</h5>
        <label><input type="radio" name="TypePaymentVN" value="0" checked />Cổng thanh toán VNPAY</label>
        <h5>Cách 2: Tách phương thức thanh toán tại site của Merchant</h5>
        <label><input type="radio" name="TypePaymentVN" value="1" />Thanh toán qua ứng dụng hỗ trợ VNPAYQR</label><br />
        <label><input type="radio" name="TypePaymentVN" value="2" />ATM - Tài khoản ngân hàng nội địa</label><br />
        <label><input type="radio" name="TypePaymentVN" value="3" />Thanh toán qua thẻ quốc tế</label><br />
    </div>

    <div class="form-group" id="load_send"></div>
    <div class="form-group">
        <button type="submit" class="btn btn-block btn-success" id="btnCheckOut">Đặt hàng</button>
    </div>

}

<script>
    document.querySelector('select[name="TypeShip"]').addEventListener('change', function () {
        var totalElement = document.getElementById('total');
        var costShipElement = document.getElementById('cost');
        var tongtien = parseFloat(totalElement.textContent.replace(/\D/g, '')); // Lấy giá trị số từ chuỗi trong <td>
        var phigiaohang = 70000;
        if (this.value === '2') { // Phí giao hàng khi chọn option 2
            var newTotal = tongtien + phigiaohang;
            totalElement.textContent = newTotal; // Cập nhật giá trị trong <td>
            costShipElement.textContent = phigiaohang;
        } else {
            totalElement.textContent = tongtien - phigiaohang;// Giữ nguyên giá trị ban đầu
            costShipElement.textContent = 0;
        }
    });
    // Function to fetch provinces from API
    function fetchProvinces() {
        fetch('https://dev-online-gateway.ghn.vn/shiip/public-api/master-data/province', {
            method: 'GET',
            headers: {
                'token': 'f4b8b19d-21a7-11ef-9687-e65979a55bd5',
                'Content-Type': 'application/json'
            }
        })
            .then(response => response.json())
            .then(data => {
                const provinceSelect = document.getElementById('provinceSelect');
                data.data.forEach(province => {
                    const option = document.createElement('option');
                    option.value = province.ProvinceID;
                    option.text = province.ProvinceName;
                    provinceSelect.appendChild(option);
                });
            })
            .catch(error => console.error('Error fetching provinces:', error));
    }

    // Function to fetch districts based on selected province
    function fetchDistricts(provinceId) {
        fetch(`https://dev-online-gateway.ghn.vn/shiip/public-api/master-data/district?province_id=${provinceId}`, {
            method: 'GET',
            headers: {
                'token': 'f4b8b19d-21a7-11ef-9687-e65979a55bd5',
                'Content-Type': 'application/json'
            }
        })
            .then(response => response.json())
            .then(data => {
                const districtSelect = document.getElementById('districtSelect');
                districtSelect.innerHTML = '<option value="">-- Chọn quận/huyện --</option>';
                data.data.forEach(district => {
                    const option = document.createElement('option');
                    option.value = district.DistrictID;
                    option.text = district.DistrictName;
                    districtSelect.appendChild(option);
                });
            })
            .catch(error => console.error('Error fetching districts:', error));
    }

    // Event listener for province select change
    document.getElementById('provinceSelect').addEventListener('change', function () {
        const selectedProvinceId = this.value;
        fetchDistricts(selectedProvinceId);
    });

    // Call fetchProvinces function when the page loads
    fetchProvinces();

</script>